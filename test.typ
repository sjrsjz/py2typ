#import "@preview/cetz:0.3.1" as cetz
#let obj = (a: 1, b: 2, c: (d: 3, e: 4))
#let obj2 = (value: 1, name: "test")
#let obj3 = (1,)
#let obj4 = (1, 2, 3, 4)
#let plot = {
  let cell = block.with(width: auto, height: auto, inset: 0pt)
  grid(
  columns: 2,
  column-gutter: 5em,
  rows: auto,
  gutter: 5em,
    cell[#{
    {figure(caption: figure.caption(position: top)[折线图])[#context{
      cetz.canvas({
        cetz.draw.set-viewport((0.7042694444444446cm, 9.953044444444444cm), (10.159662891791527cm, 19.37173333333333cm), bounds: (3.722595845412237, 3.7081452318460193))
        cetz.draw.rect((0.0, -1.646433986793894), (3.3288950580106627, 1.6680104576505508), stroke: black)
                  cetz.draw.floating({
        {
          let x-max-text-width = 0
          cetz.draw.line((0.1513134117277574, -1.646433986793894), (0.1513134117277574, -1.696433986793894), stroke: black)
          cetz.draw.content((0.1513134117277574, -1.8464339867938941), $0.0$)
          cetz.draw.line((0.7565670586387869, -1.646433986793894), (0.7565670586387869, -1.696433986793894), stroke: black)
          cetz.draw.content((0.7565670586387869, -1.8464339867938941), $2.0$)
          cetz.draw.line((1.3618207055498166, -1.646433986793894), (1.3618207055498166, -1.696433986793894), stroke: black)
          cetz.draw.content((1.3618207055498166, -1.8464339867938941), $4.0$)
          cetz.draw.line((1.9670743524608463, -1.646433986793894), (1.9670743524608463, -1.696433986793894), stroke: black)
          cetz.draw.content((1.9670743524608463, -1.8464339867938941), $6.0$)
          cetz.draw.line((2.5723279993718755, -1.646433986793894), (2.5723279993718755, -1.696433986793894), stroke: black)
          cetz.draw.content((2.5723279993718755, -1.8464339867938941), $8.0$)
          cetz.draw.line((3.177581646282905, -1.646433986793894), (3.177581646282905, -1.696433986793894), stroke: black)
          cetz.draw.content((3.177581646282905, -1.8464339867938941), $10.0$)
          cetz.draw.line((0.0, -1.5173538919939853), (-0.05000000000000002, -1.5173538919939853), stroke: black)
          let text-width = measure($-1.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, -1.5173538919939853), $-1.0$)
          cetz.draw.line((0.0, -1.138015418995489), (-0.05000000000000002, -1.138015418995489), stroke: black)
          let text-width = measure($-0.75$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, -1.138015418995489), $-0.75$)
          cetz.draw.line((0.0, -0.7586769459969926), (-0.05000000000000002, -0.7586769459969926), stroke: black)
          let text-width = measure($-0.5$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, -0.7586769459969926), $-0.5$)
          cetz.draw.line((0.0, -0.3793384729984963), (-0.05000000000000002, -0.3793384729984963), stroke: black)
          let text-width = measure($-0.25$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, -0.3793384729984963), $-0.25$)
          cetz.draw.line((0.0, 0.0), (-0.05000000000000002, 0.0), stroke: black)
          let text-width = measure($0.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 0.0), $0.0$)
          cetz.draw.line((0.0, 0.3793384729984963), (-0.05000000000000002, 0.3793384729984963), stroke: black)
          let text-width = measure($0.25$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 0.3793384729984963), $0.25$)
          cetz.draw.line((0.0, 0.7586769459969926), (-0.05000000000000002, 0.7586769459969926), stroke: black)
          let text-width = measure($0.5$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 0.7586769459969926), $0.5$)
          cetz.draw.line((0.0, 1.138015418995489), (-0.05000000000000002, 1.138015418995489), stroke: black)
          let text-width = measure($0.75$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 1.138015418995489), $0.75$)
          cetz.draw.line((0.0, 1.5173538919939853), (-0.05000000000000002, 1.5173538919939853), stroke: black)
          let text-width = measure($1.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 1.5173538919939853), $1.0$)
        }
        cetz.draw.line((0.1513134117277574, -1.646433986793894), (0.1513134117277574, 1.6680104576505508), stroke: (gray + 0.2pt))
        cetz.draw.line((0.7565670586387869, -1.646433986793894), (0.7565670586387869, 1.6680104576505508), stroke: (gray + 0.2pt))
        cetz.draw.line((1.3618207055498166, -1.646433986793894), (1.3618207055498166, 1.6680104576505508), stroke: (gray + 0.2pt))
        cetz.draw.line((1.9670743524608463, -1.646433986793894), (1.9670743524608463, 1.6680104576505508), stroke: (gray + 0.2pt))
        cetz.draw.line((2.5723279993718755, -1.646433986793894), (2.5723279993718755, 1.6680104576505508), stroke: (gray + 0.2pt))
        cetz.draw.line((3.177581646282905, -1.646433986793894), (3.177581646282905, 1.6680104576505508), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, -1.5173538919939853), (3.3288950580106627, -1.5173538919939853), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, -1.138015418995489), (3.3288950580106627, -1.138015418995489), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, -0.7586769459969926), (3.3288950580106627, -0.7586769459969926), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, -0.3793384729984963), (3.3288950580106627, -0.3793384729984963), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.0), (3.3288950580106627, 0.0), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.3793384729984963), (3.3288950580106627, 0.3793384729984963), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.7586769459969926), (3.3288950580106627, 0.7586769459969926), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 1.138015418995489), (3.3288950580106627, 1.138015418995489), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 1.5173538919939853), (3.3288950580106627, 1.5173538919939853), stroke: (gray + 0.2pt))
          let points = ((0.1513134117277574, 0.0), (0.4875654377894405, 1.3598407242074604), (0.8238174638511235, 1.2066302485156024), (1.1600694899128068, -0.28915904015848304), (1.4963215159744898, -1.4632103304883006), (1.8325735420361728, -1.009194372324212), (2.168825568097856, 0.5677198259015795), (2.5050775941595393, 1.5129503655226828), (2.841329620221222, 0.7747695135071827), (3.177581646282905, -0.8254725499348767))
          cetz.draw.line(..points, stroke: (paint: rgb(255, 0, 0), dash: (4pt, 2pt), thickness: 1.5pt))
          points.map(p => cetz.draw.circle(p, radius: 1pt, fill: rgb(255, 0, 0), stroke: none)).join()
          let points = ((0.1513134117277574, 1.5173538919939853), (0.4875654377894405, 0.6731983647753644), (0.8238174638511235, -0.9200034113613221), (1.1600694899128068, -1.4895468717176776), (1.4963215159744898, -0.40171925806664127), (1.8325735420361728, 1.1330885015824819), (2.168825568097856, 1.4071449935339198), (2.5050775941595393, 0.11551634089632135), (2.841329620221222, -1.3046436427197805), (3.177581646282905, -1.2731684503054994))
          cetz.draw.line(..points, stroke: (paint: rgb(0, 0, 255), dash: (1pt, 1pt), thickness: 1.5pt))
          {
          let marker = [#box(width: 1cm,height: 1cm)[#align(center + horizon)[#text(fill: rgb(0, 0, 255), size: 0.5em)[✖]]]]
          points.map(p => cetz.draw.content((p.at(0),p.at(1)), stroke: rgb(0, 0, 255), marker)).join()
          }
          let points = ((0.5945268257266195, -1.1253479656413672, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.6186442984873854, -1.4200636980345778, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.025691468885486, -0.6898827220176817, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.966105829655567, -0.7355189297543125, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.0115042833124739, -0.7044482865810187, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.8521759074974414, -1.011515735165981, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.26835176082961065, -0.6733939113187629, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.6431552670155037, -1.2820473691335301, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.451128021875799, -0.35248220088446086, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.1933752872637704, -0.3101904800291581, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.091146972752454, -0.59406832633593, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.140228864739651, -1.106417604152891, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.627859652770446, -0.10370578702708033, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.3451782511795989, -0.5134327019269986, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.467412898134572, -0.14729102293739163, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.149430369874688, -0.7291368379842735, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.143839349427352, -0.8549005471441823, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.927018693692284, -0.5047996644937223, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.5414330914506986, -1.206338887476386, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.9191958197622938, -1.4279532319415507, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.8561945700620206, -0.5538805170913307, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.377725933988961, -1.2876209355252664, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.028247168521462, -1.3539268126229627, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.8484505402852178, -0.525897142389345, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.098106697372901, -0.22015524888770513, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.0033370872353404, -1.4039031465209235, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.24474281587592198, -0.9826472613876523, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.3676312615082615, -0.8389008708767923, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.5395935993093595, -0.14788930833837408, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.2948308317698847, -0.472293695482637, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.7349985663625436, -0.7054391583166584, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.22715601740902275, -0.3142810888850306, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.165788182497614, -0.9567537617018087, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.9887086638285045, -0.4079051826259332, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.5829397907532864, -1.0360855059863618, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.6064647108252956, -0.3911509163646092, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.9256439416086173, -0.9067017743892918, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.3096237617751984, -1.3617965967315244, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.2189317714948023, -0.12337055562180559, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.9521619622343216, -1.4098640852398305, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (3.059171885517777, -0.2664405844275863, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (3.0900107238690135, -1.452600640458523, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.5954109851352993, -1.413488695236627, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (3.1382990734456726, -1.4957774211373285, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (1.9656488024274186, -1.1615776644502573, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.31721886771062857, -1.1838904487649855, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (2.3348886419214567, -1.3976824321519032, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.5737882322981481, -0.7763740136689519, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.6533568597345212, -1.190976663092839, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)), (0.7027446703782325, -1.0879387210449647, 1.0pt, rgb(0, 127, 0, 127), rgb(0, 127, 0, 127)))
          points.map(p => cetz.draw.circle((p.at(0), p.at(1)), radius: p.at(2), fill: p.at(3), stroke: p.at(4))).join()
          let labels = ([$sin(x)$], [$cos(x)$], [scatter])
          let x-max-text-width = labels.map(label => measure(label).width.cm() / 2.54).sorted().last()
          cetz.draw.rect(
                        (2.778895058010663 - x-max-text-width, 1.6180104576505507),
                        (3.278895058010663, 0.7180104576505508),
                        fill: rgb(255, 255, 255, 200),
                        stroke: gray
                    )
          cetz.draw.line(
                            (2.8788950580106625 - x-max-text-width, 1.4680104576505508),
                            (3.0788950580106627 - x-max-text-width, 1.4680104576505508),
                            stroke: (paint: rgb(255, 0, 0), dash: (4pt, 2pt), thickness: 1pt)
                        )
          cetz.draw.circle(
                                    (2.9788950580106626 - x-max-text-width, 1.4680104576505508),
                                    radius: 1pt,
                                    fill: rgb(255, 0, 0),
                                    stroke: none
                                )
          cetz.draw.content(
                        (3.1788950580106627 - x-max-text-width, 1.4680104576505508),
                        [$sin(x)$],
                        anchor: "west"
                    )
          cetz.draw.line(
                            (2.8788950580106625 - x-max-text-width, 1.1680104576505508),
                            (3.0788950580106627 - x-max-text-width, 1.1680104576505508),
                            stroke: (paint: rgb(0, 0, 255), dash: (1pt, 1pt), thickness: 1pt)
                        )
          cetz.draw.content(
                                    (2.9788950580106626 - x-max-text-width, 1.1680104576505508),
                                    [#box(width: 1cm,height: 1cm)[#align(center + horizon)[#text(fill: rgb(0, 0, 255), size: 0.5em)[✖]]]]
                                )
          cetz.draw.content(
                        (3.1788950580106627 - x-max-text-width, 1.1680104576505508),
                        [$cos(x)$],
                        anchor: "west"
                    )
          cetz.draw.circle(
                            (2.9788950580106626 - x-max-text-width, 0.8680104576505506),
                            radius: 1pt,
                            fill: rgb(0, 127, 0, 127),
                            stroke: rgb(0, 127, 0, 127)
                        )
          cetz.draw.content(
                        (3.1788950580106627 - x-max-text-width, 0.8680104576505506),
                        [scatter],
                        anchor: "west"
                    )
      })})}]
    }}],
    cell[#{
    {figure(caption: figure.caption(position: top)[条形图])[#context{
      cetz.canvas({
        cetz.draw.set-viewport((10.323316427145064cm, 9.953044444444444cm), (19.778709874492147cm, 19.37173333333333cm), bounds: (3.722595845412237, 3.7081452318460193))
        cetz.draw.rect((0.0, 0.0), (3.328895058010662, 3.3144444444444443), stroke: black)
                  cetz.draw.floating({
        {
          let x-max-text-width = 0
          cetz.draw.line((0.26339742041498504, 0.0), (0.26339742041498504, -0.05), stroke: black)
          cetz.draw.content((0.26339742041498504, -0.2), $0.0$)
          cetz.draw.line((0.8238174638511234, 0.0), (0.8238174638511234, -0.05), stroke: black)
          cetz.draw.content((0.8238174638511234, -0.2), $2.0$)
          cetz.draw.line((1.3842375072872617, 0.0), (1.3842375072872617, -0.05), stroke: black)
          cetz.draw.content((1.3842375072872617, -0.2), $4.0$)
          cetz.draw.line((1.9446575507234, 0.0), (1.9446575507234, -0.05), stroke: black)
          cetz.draw.content((1.9446575507234, -0.2), $6.0$)
          cetz.draw.line((2.5050775941595385, 0.0), (2.5050775941595385, -0.05), stroke: black)
          cetz.draw.content((2.5050775941595385, -0.2), $8.0$)
          cetz.draw.line((3.065497637595677, 0.0), (3.065497637595677, -0.05), stroke: black)
          cetz.draw.content((3.065497637595677, -0.2), $10.0$)
          cetz.draw.line((0.0, 0.0), (-0.04999999999999999, 0.0), stroke: black)
          let text-width = measure($0.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.10000000000000003 - text-width, 0.0), $0.0$)
          cetz.draw.line((0.0, 0.7191709438360834), (-0.04999999999999999, 0.7191709438360834), stroke: black)
          let text-width = measure($5.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.10000000000000003 - text-width, 0.7191709438360834), $5.0$)
          cetz.draw.line((0.0, 1.4383418876721668), (-0.04999999999999999, 1.4383418876721668), stroke: black)
          let text-width = measure($10.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.10000000000000003 - text-width, 1.4383418876721668), $10.0$)
          cetz.draw.line((0.0, 2.1575128315082504), (-0.04999999999999999, 2.1575128315082504), stroke: black)
          let text-width = measure($15.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.10000000000000003 - text-width, 2.1575128315082504), $15.0$)
          cetz.draw.line((0.0, 2.8766837753443335), (-0.04999999999999999, 2.8766837753443335), stroke: black)
          let text-width = measure($20.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.10000000000000003 - text-width, 2.8766837753443335), $20.0$)
        }
        cetz.draw.line((0.26339742041498504, 0.0), (0.26339742041498504, 3.3144444444444443), stroke: (gray + 0.2pt))
        cetz.draw.line((0.8238174638511234, 0.0), (0.8238174638511234, 3.3144444444444443), stroke: (gray + 0.2pt))
        cetz.draw.line((1.3842375072872617, 0.0), (1.3842375072872617, 3.3144444444444443), stroke: (gray + 0.2pt))
        cetz.draw.line((1.9446575507234, 0.0), (1.9446575507234, 3.3144444444444443), stroke: (gray + 0.2pt))
        cetz.draw.line((2.5050775941595385, 0.0), (2.5050775941595385, 3.3144444444444443), stroke: (gray + 0.2pt))
        cetz.draw.line((3.065497637595677, 0.0), (3.065497637595677, 3.3144444444444443), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.0), (3.328895058010662, 0.0), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.7191709438360834), (3.328895058010662, 0.7191709438360834), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 1.4383418876721668), (3.328895058010662, 1.4383418876721668), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 2.1575128315082504), (3.328895058010662, 2.1575128315082504), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 2.8766837753443335), (3.328895058010662, 2.8766837753443335), stroke: (gray + 0.2pt))
        cetz.draw.rect((0.15131341172775736, 0.0), (0.3754814291022127, 0.0), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((0.46265788030338983, 0.0), (0.6868258976778452, 3.1566137566137566), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((0.7740023488790223, 0.0), (0.9981703662534777, 2.078270227790439), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((1.0853468174546548, 0.0), (1.30951483482911, 1.0262279786378266), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((1.3966912860302871, 0.0), (1.6208593034047425, 0.4504360726131381), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((1.7080357546059193, 0.0), (1.9322037719803746, 0.18535049569997214), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((2.019380223181552, 0.0), (2.243548240556007, 0.07321930016538018), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((2.3307246917571844, 0.0), (2.55489270913164, 0.028120493551086267), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((2.6420691603328166, 0.0), (2.866237177707272, 0.010579507760817179), fill: rgb(0, 127, 0, 255), stroke: black)
        cetz.draw.rect((2.953413628908449, 0.0), (3.1775816462829045, 0.003918037240485376), fill: rgb(0, 127, 0, 255), stroke: black)
      })})}]
    }}],
    cell[#{
    {figure(caption: figure.caption(position: top)[饼图])[#context{
      cetz.canvas({
        cetz.draw.set-viewport((0.7226217236735415cm, -0.016455555555555224cm), (10.14131061256243cm, 9.402233333333333cm), bounds: (3.7081452318460193, 3.7081452318460193))
        
        
        {
          let x-max-text-width = 0
        }
           cetz.draw.arc((2.9830000000000005, 0.0), radius: 1.325777777777778, start: 0.0deg, stop: 54.00000214576721deg, fill: rgb(31, 119, 180, 255), mode:"PIE", stroke: none)
           cetz.draw.content((2.247860541398895, 0.30094526899836976), [15.0%])
           cetz.draw.content((3.1928818520815705, 0.7222686455960874), [A类])
           cetz.draw.arc((2.436494807648334, 1.0725767821711816), radius: 1.325777777777778, start: 54.00000214576721deg, stop: 162.00000643730164deg, fill: rgb(255, 127, 14, 255), mode:"PIE", stroke: none)
           cetz.draw.content((1.4523782429520284, 0.6304447820143316), [30.0%])
           cetz.draw.content((1.1246278761197184, 1.5130674768343957), [B类])
           cetz.draw.arc((0.39633258147807116, 0.4096877224343789), radius: 1.325777777777778, start: 162.00000643730164deg, stop: 324.0000021457672deg, fill: rgb(44, 160, 44, 255), mode:"PIE", stroke: none)
           cetz.draw.content((1.3562770085234044, -0.5906383473531993), [45.0%])
           cetz.draw.content((0.8747646666052958, -1.4175320336476784), [C类])
           cetz.draw.arc((2.7297990043934037, -0.7792725854261118), radius: 1.325777777777778, start: 324.0000021457672deg, stop: 360.000002682209deg, fill: rgb(214, 39, 40, 255), mode:"PIE", stroke: none)
           cetz.draw.content((2.2876670282101466, -0.20484390548706688), [10.0%])
           cetz.draw.content((3.2963787177908257, -0.49162537316896054), [D类])
      })}]
    }}],
    cell[#{
    {figure(caption: figure.caption(position: top)[散点图])[#context{
      cetz.canvas({
        cetz.draw.set-viewport((10.323316427145064cm, -0.016455555555555224cm), (19.778709874492147cm, 9.402233333333333cm), bounds: (3.722595845412237, 3.7081452318460193))
        cetz.draw.rect((0.0, -0.13370174550235045), (3.328895058010662, 3.1807426989420944), stroke: black)
                  cetz.draw.floating({
        {
          let x-max-text-width = 0
          cetz.draw.line((0.08569396872479382, -0.13370174550235045), (0.08569396872479382, -0.18370174550235044), stroke: black)
          cetz.draw.content((0.08569396872479382, -0.33370174550235043), $0.0$)
          cetz.draw.line((0.7232558350500168, -0.13370174550235045), (0.7232558350500168, -0.18370174550235044), stroke: black)
          cetz.draw.content((0.7232558350500168, -0.33370174550235043), $0.2$)
          cetz.draw.line((1.3608177013752396, -0.13370174550235045), (1.3608177013752396, -0.18370174550235044), stroke: black)
          cetz.draw.content((1.3608177013752396, -0.33370174550235043), $0.4$)
          cetz.draw.line((1.9983795677004625, -0.13370174550235045), (1.9983795677004625, -0.18370174550235044), stroke: black)
          cetz.draw.content((1.9983795677004625, -0.33370174550235043), $0.6$)
          cetz.draw.line((2.6359414340256855, -0.13370174550235045), (2.6359414340256855, -0.18370174550235044), stroke: black)
          cetz.draw.content((2.6359414340256855, -0.33370174550235043), $0.8$)
          cetz.draw.line((3.2735033003509084, -0.13370174550235045), (3.2735033003509084, -0.18370174550235044), stroke: black)
          cetz.draw.content((3.2735033003509084, -0.33370174550235043), $1.0$)
          cetz.draw.line((0.0, 0.0), (-0.05000000000000002, 0.0), stroke: black)
          let text-width = measure($0.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 0.0), $0.0$)
          cetz.draw.line((0.0, 0.6140695597254785), (-0.05000000000000002, 0.6140695597254785), stroke: black)
          let text-width = measure($0.2$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 0.6140695597254785), $0.2$)
          cetz.draw.line((0.0, 1.228139119450957), (-0.05000000000000002, 1.228139119450957), stroke: black)
          let text-width = measure($0.4$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 1.228139119450957), $0.4$)
          cetz.draw.line((0.0, 1.8422086791764352), (-0.05000000000000002, 1.8422086791764352), stroke: black)
          let text-width = measure($0.6$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 1.8422086791764352), $0.6$)
          cetz.draw.line((0.0, 2.456278238901914), (-0.05000000000000002, 2.456278238901914), stroke: black)
          let text-width = measure($0.8$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 2.456278238901914), $0.8$)
          cetz.draw.line((0.0, 3.070347798627392), (-0.05000000000000002, 3.070347798627392), stroke: black)
          let text-width = measure($1.0$).width.cm() / 20.32 * 2.54
          x-max-text-width = calc.max(x-max-text-width, text-width)
          cetz.draw.content((-0.1 - text-width, 3.070347798627392), $1.0$)
        }
        cetz.draw.line((0.08569396872479382, -0.13370174550235045), (0.08569396872479382, 3.1807426989420944), stroke: (gray + 0.2pt))
        cetz.draw.line((0.7232558350500168, -0.13370174550235045), (0.7232558350500168, 3.1807426989420944), stroke: (gray + 0.2pt))
        cetz.draw.line((1.3608177013752398, -0.13370174550235045), (1.3608177013752398, 3.1807426989420944), stroke: (gray + 0.2pt))
        cetz.draw.line((1.9983795677004628, -0.13370174550235045), (1.9983795677004628, 3.1807426989420944), stroke: (gray + 0.2pt))
        cetz.draw.line((2.6359414340256855, -0.13370174550235045), (2.6359414340256855, 3.1807426989420944), stroke: (gray + 0.2pt))
        cetz.draw.line((3.2735033003509093, -0.13370174550235045), (3.2735033003509093, 3.1807426989420944), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.0), (3.328895058010662, 0.0), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 0.6140695597254785), (3.328895058010662, 0.6140695597254785), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 1.228139119450957), (3.328895058010662, 1.228139119450957), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 1.8422086791764356), (3.328895058010662, 1.8422086791764356), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 2.456278238901914), (3.328895058010662, 2.456278238901914), stroke: (gray + 0.2pt))
        cetz.draw.line((0.0, 3.070347798627393), (3.328895058010662, 3.070347798627393), stroke: (gray + 0.2pt))
          let points = ((1.27965645465477, 2.976962027439872, 1.0pt, rgb(70, 9, 92, 255), rgb(31, 119, 180, 127)), (3.1163899064087737, 2.3799273578506335, 1.0pt, rgb(48, 180, 122, 255), rgb(31, 119, 180, 127)), (2.419151087124974, 2.884588507044373, 1.0pt, rgb(50, 99, 141, 255), rgb(31, 119, 180, 127)), (1.9941030711052519, 2.7474311855371134, 1.0pt, rgb(31, 149, 139, 255), rgb(31, 119, 180, 127)), (0.5830516466348125, 1.8357608837419797, 1.0pt, rgb(210, 225, 27, 255), rgb(31, 119, 180, 127)), (0.5829747563350803, 2.830474528114538, 1.0pt, rgb(58, 82, 139, 255), rgb(31, 119, 180, 127)), (0.2708534496091322, 0.271702758870141, 1.0pt, rgb(39, 124, 142, 255), rgb(31, 119, 180, 127)), (2.846898369058074, 0.6017355501973175, 1.0pt, rgb(107, 205, 89, 255), rgb(31, 119, 180, 127)), (2.001934012540336, 0.13886350694435562, 1.0pt, rgb(61, 75, 137, 255), rgb(31, 119, 180, 127)), (2.342894339691586, 0.99887726488571, 1.0pt, rgb(72, 26, 108, 255), rgb(31, 119, 180, 127)), (0.1513134117277574, 1.1933744607745622, 1.0pt, rgb(53, 93, 140, 255), rgb(31, 119, 180, 127)), (3.1775816462829045, 0.8331359023666556, 1.0pt, rgb(69, 54, 129, 255), rgb(31, 119, 180, 127)), (2.739362387111864, 2.5445123868645747, 1.0pt, rgb(225, 227, 24, 255), rgb(31, 119, 180, 127)), (0.7625905672141929, 1.0953567912666606, 1.0pt, rgb(141, 214, 68, 255), rgb(31, 119, 180, 127)), (0.6653172959102015, 0.8625666533771152, 1.0pt, rgb(47, 179, 123, 255), rgb(31, 119, 180, 127)), (0.6703525766978838, 1.6662657242486363, 1.0pt, rgb(186, 222, 39, 255), rgb(31, 119, 180, 127)), (1.0555602299060678, 0.43268638392453385, 1.0pt, rgb(139, 213, 70, 255), rgb(31, 119, 180, 127)), (1.758517418312863, 2.463023733923706, 1.0pt, rgb(66, 62, 133, 255), rgb(31, 119, 180, 127)), (1.4626523299015464, 0.22889640470843944, 1.0pt, rgb(199, 224, 31, 255), rgb(31, 119, 180, 127)), (1.014076939489562, 3.030086133285529, 1.0pt, rgb(30, 156, 137, 255), rgb(31, 119, 180, 127)), (2.036164336103246, 2.3710600274115103, 1.0pt, rgb(141, 214, 68, 255), rgb(31, 119, 180, 127)), (0.5303737994159257, 0.6101262553511881, 1.0pt, rgb(202, 224, 30, 255), rgb(31, 119, 180, 127)), (1.0169954055099937, 0.016954820154215254, 1.0pt, rgb(49, 100, 141, 255), rgb(31, 119, 180, 127)), (1.2535856715281684, 2.5037502017218487, 1.0pt, rgb(71, 38, 118, 255), rgb(31, 119, 180, 127)), (1.5395581202864357, 2.170297889626137, 1.0pt, rgb(61, 75, 137, 255), rgb(31, 119, 180, 127)), (2.5886852254219486, 2.238305553578235, 1.0pt, rgb(38, 128, 142, 255), rgb(31, 119, 180, 127)), (0.722215914770293, 2.368068211093779, 1.0pt, rgb(149, 215, 63, 255), rgb(31, 119, 180, 127)), (1.7249753101432195, 0.22734283345189626, 1.0pt, rgb(178, 221, 44, 255), rgb(31, 119, 180, 127)), (1.9741986595344743, 1.1006144605192718, 1.0pt, rgb(68, 1, 84, 255), rgb(31, 119, 180, 127)), (0.23376902785148693, 0.3557583118420083, 1.0pt, rgb(31, 149, 139, 255), rgb(31, 119, 180, 127)), (2.022431116997605, 2.650027703624889, 1.0pt, rgb(39, 125, 142, 255), rgb(31, 119, 180, 127)), (0.6292923614825076, 1.9137420315935696, 1.0pt, rgb(61, 74, 137, 255), rgb(31, 119, 180, 127)), (0.2930660438804118, 1.0159720221764836, 1.0pt, rgb(71, 40, 120, 255), rgb(31, 119, 180, 127)), (3.110560139026029, 0.19514624088508134, 1.0pt, rgb(47, 105, 141, 255), rgb(31, 119, 180, 127)), (3.163944774676971, 0.9548238868917189, 1.0pt, rgb(236, 228, 26, 255), rgb(31, 119, 180, 127)), (2.6627105787122534, 0.9984258969351651, 1.0pt, rgb(49, 101, 141, 255), rgb(31, 119, 180, 127)), (1.0567445846374681, 2.2401447235252196, 1.0pt, rgb(30, 151, 138, 255), rgb(31, 119, 180, 127)), (0.397054045193994, 1.9575231786739253, 1.0pt, rgb(77, 194, 107, 255), rgb(31, 119, 180, 127)), (2.266898395647026, 2.724051691083395, 1.0pt, rgb(44, 112, 142, 255), rgb(31, 119, 180, 127)), (1.4888161956063999, 1.4498640559499898, 1.0pt, rgb(253, 231, 36, 255), rgb(31, 119, 180, 127)), (0.474728592578159, 0.36719592974516757, 1.0pt, rgb(248, 230, 33, 255), rgb(31, 119, 180, 127)), (1.6642235435832866, 2.1899095623325855, 1.0pt, rgb(58, 82, 139, 255), rgb(31, 119, 180, 127)), (0.19531801723670872, 2.3358746992495245, 1.0pt, rgb(31, 146, 140, 255), rgb(31, 119, 180, 127)), (2.984434031909546, 1.7233162079772546, 1.0pt, rgb(52, 95, 141, 255), rgb(31, 119, 180, 127)), (0.910635208907362, 2.3671373837874548, 1.0pt, rgb(54, 91, 140, 255), rgb(31, 119, 180, 127)), (2.1976886891986678, 1.5161242222693074, 1.0pt, rgb(70, 11, 94, 255), rgb(31, 119, 180, 127)), (1.0793694458538359, 1.6049715919632737, 1.0pt, rgb(39, 173, 128, 255), rgb(31, 119, 180, 127)), (1.743571659715747, 1.3126996245400864, 1.0pt, rgb(31, 147, 139, 255), rgb(31, 119, 180, 127)), (1.8285020989112204, 0.07804555984176333, 1.0pt, rgb(71, 17, 99, 255), rgb(31, 119, 180, 127)), (0.6749747270417336, 0.33126420535966034, 1.0pt, rgb(54, 90, 140, 255), rgb(31, 119, 180, 127)))
          points.map(p => cetz.draw.circle((p.at(0), p.at(1)), radius: p.at(2), fill: p.at(3), stroke: p.at(4))).join()
      })})}]
    }}],
  )
}